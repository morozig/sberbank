{"version":3,"sources":["lib/api.ts","lib/app-context.ts","lib/app-store.ts","components/UsersSelect.tsx","components/Search.tsx","components/Comment.tsx","components/Comments.tsx","components/DeleteButton.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["users","id","name","comments","userId","text","date","Date","isDeleted","getUsers","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","stop","apply","this","arguments","getComments","_ref2","_callee2","_context2","filter","comment","deleteComment","_ref3","_callee3","commentId","_context3","find","_x","AppContext","React","createContext","reducer","state","action","type","newState","objectSpread","payload","selectedUserId","search","isSelected","status","Error","UsersSelect","props","dispatch","useContext","react_default","createElement","onChange","event","target","value","map","user","key","Search","Comment","checked","parts","length","split","RegExp","concat","part","className","userName","toLocaleString","i","toLowerCase","undefined","Comments","includes","slice","Fragment","src_components_Comment","DeleteButton","isEnabled","onClick","initialState","App","_useReducer","useReducer","_useReducer2","slicedToArray","useEffect","selectedComments","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","apiComments","appComments","Symbol","iterator","done","api","t0","return","finish","sent","apiComment","appComment","deleteEnabled","some","app_context","Provider","components_UsersSelect","components_Search","src_components_Comments","src_components_DeleteButton","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5f709be.chunk.js","sourcesContent":["import ApiUser from \"../interfaces/api-user\";\r\nimport ApiComment from \"../interfaces/api-comment\";\r\n\r\nconst users = [\r\n    {\r\n        id: 1,\r\n        name: 'me'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Винни-Пух'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Пятачок'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Кролик'\r\n    }\r\n] as ApiUser[];\r\n\r\nconst comments = [\r\n    {\r\n        id: 1,\r\n        userId: 2,\r\n        text: 'Недаром солнце в гости к нам Всегда приходит по утрам! Тарам-тарам!',\r\n        date: new Date('2019-07-21 07:45:01'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 2,\r\n        userId: 3,\r\n        text: 'Тарам-парам!',\r\n        date: new Date('2019-07-21 07:45:02'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 3,\r\n        userId: 2,\r\n        text: 'Послушай, Пятачок, а не пойти ли нам в гости?',\r\n        date: new Date('2019-07-21 07:45:03'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 4,\r\n        userId: 3,\r\n        text: 'В гости?',\r\n        date: new Date('2019-07-21 07:45:04'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 5,\r\n        userId: 2,\r\n        text: 'Да, я вот тут подумал, а не пойти ли нам в гости? По-моему, пора чем-нибудь подкрепиться!',\r\n        date: new Date('2019-07-21 07:45:05'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 6,\r\n        userId: 3,\r\n        text: 'Давай!  А куда мы пойдем?',\r\n        date: new Date('2019-07-21 07:45:06'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 7,\r\n        userId: 2,\r\n        text: 'Я думаю, к тебе!',\r\n        date: new Date('2019-07-21 07:45:07'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 8,\r\n        userId: 3,\r\n        text: 'Пойдем!',\r\n        date: new Date('2019-07-21 07:45:08'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 9,\r\n        userId: 2,\r\n        text: 'Кто ходит в гости по утрам, Тот поступает мудро! Известно все, тарам-парам На то оно и утро!',\r\n        date: new Date('2019-07-21 07:45:09'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 10,\r\n        userId: 3,\r\n        text: 'На то оно и утро!',\r\n        date: new Date('2019-07-21 07:45:10'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 11,\r\n        userId: 2,\r\n        text: 'Послушай, Пятачок, а у тебя есть что-нибудь поесть?  Ну, например, мед?',\r\n        date: new Date('2019-07-21 07:45:11'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 12,\r\n        userId: 3,\r\n        text: 'Нет, меда у меня нет!',\r\n        date: new Date('2019-07-21 07:45:12'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 13,\r\n        userId: 2,\r\n        text: 'Нет?',\r\n        date: new Date('2019-07-21 07:45:13'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 14,\r\n        userId: 2,\r\n        text: 'Знаешь, Пятачок, пожалуй, мы к тебе не пойдем! А то, что же получается?  Я иду в гости, а ты не идешь!',\r\n        date: new Date('2019-07-21 07:45:14'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 15,\r\n        userId: 3,\r\n        text: 'Ладно!  Тогда пойдем к тебе!',\r\n        date: new Date('2019-07-21 07:45:15'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 16,\r\n        userId: 2,\r\n        text: 'Да, если гость пришел с утра, Ему спешить не надо! Кричат хозяева «Ура!» Ему ужасно рады!',\r\n        date: new Date('2019-07-21 07:45:16'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 17,\r\n        userId: 3,\r\n        text: 'Ему ужасно рады!',\r\n        date: new Date('2019-07-21 07:45:17'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 18,\r\n        userId: 2,\r\n        text: 'Постой, Пятачок! Это что же получается, что теперь я не иду в гости?',\r\n        date: new Date('2019-07-21 07:45:18'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 19,\r\n        userId: 3,\r\n        text: 'А что же делать?',\r\n        date: new Date('2019-07-21 07:45:19'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 20,\r\n        userId: 3,\r\n        text: 'Пух, я кажется, придумал! Давай пойдем к кому-нибудь другому!',\r\n        date: new Date('2019-07-21 07:45:20'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 21,\r\n        userId: 2,\r\n        text: 'Правильно!  А к кому?',\r\n        date: new Date('2019-07-21 07:45:21'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 22,\r\n        userId: 3,\r\n        text: 'Здесь, кажется, недалеко живет Кролик!',\r\n        date: new Date('2019-07-21 07:45:22'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 23,\r\n        userId: 2,\r\n        text: 'Правильно!  Молодец, Пятачок! Кролик – это вполне подходящая компания! А подходящая компания, это где нас могут чем-нибудь угостить!',\r\n        date: new Date('2019-07-21 07:45:23'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 24,\r\n        userId: 2,\r\n        text: 'Эй, есть кто-нибудь дома?',\r\n        date: new Date('2019-07-21 07:45:24'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 25,\r\n        userId: 4,\r\n        text: 'Нет!  И незачем так орать!?',\r\n        date: new Date('2019-07-21 07:45:25'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 26,\r\n        userId: 2,\r\n        text: 'Простите, а что совсем никого нет дома?',\r\n        date: new Date('2019-07-21 07:45:26'),\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 27,\r\n        userId: 4,\r\n        text: 'Совсем никого!',\r\n        date: new Date('2019-07-21 07:45:27'),\r\n        isDeleted: false\r\n    }\r\n];\r\n\r\nconst getUsers = async () => {\r\n    return users;\r\n};\r\n\r\nconst getComments = async () => {\r\n    return comments \r\n        .filter(comment => !comment.isDeleted) as ApiComment[];\r\n};\r\n\r\nconst deleteComment = async (commentId: number) => {\r\n    const comment = comments.find(comment => comment.id === commentId);\r\n    if (comment) {\r\n        comment.isDeleted = true;\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport {\r\n    getUsers,\r\n    getComments,\r\n    deleteComment\r\n};","import React from 'react';\r\nimport AppAction from '../interfaces/app-action';\r\n\r\ninterface AppContext {\r\n    dispatch: React.Dispatch<AppAction>;\r\n}\r\n\r\nconst AppContext = React.createContext({} as AppContext);\r\n\r\nexport default AppContext;","import AppState from \"../interfaces/app-state\";\r\nimport AppAction from \"../interfaces/app-action\";\r\nimport ApiUser from \"../interfaces/api-user\";\r\nimport AppComment from \"../interfaces/app-comment\";\r\n\r\nexport const reducer = (state: AppState, action: AppAction) => {\r\n    switch (action.type) {\r\n        case 'SET_USERS': {\r\n            const newState = {...state};\r\n            newState.users = action.payload as ApiUser[];\r\n            return newState as AppState;\r\n        }\r\n        case 'SET_COMMENTS': {\r\n            const newState = {...state};\r\n            newState.comments = action.payload as AppComment[];\r\n            return newState as AppState;\r\n        }\r\n        case 'SELECT_USER': {\r\n            const newState = {...state};\r\n            newState.selectedUserId = action.payload as number;\r\n            return newState as AppState;\r\n        }\r\n        case 'SET_SEARCH': {\r\n            const newState = {...state};\r\n            newState.search = action.payload as string;\r\n            return newState as AppState;\r\n        }\r\n        case 'CHECK_COMMENT': {\r\n            const newState = {...state};\r\n            const comment = newState.comments.find(comment => \r\n                comment.id === action.payload\r\n            )\r\n            if (comment) {\r\n                comment.isSelected = !comment.isSelected;\r\n            }\r\n            return newState as AppState;\r\n        }\r\n        case 'SET_STATUS': {\r\n            const newState = {...state};\r\n            newState.status = action.payload as string;\r\n            return newState as AppState;\r\n        }\r\n        default:\r\n            throw new Error('unknown action!');\r\n    }\r\n};","import React, {useContext} from 'react';\r\nimport ApiUser from '../interfaces/api-user';\r\nimport AppContext from '../lib/app-context';\r\n\r\ninterface UsersSelecProps {\r\n    users: ApiUser[];\r\n    selectedUserId: number;\r\n}\r\n\r\nconst UsersSelect: React.FC<UsersSelecProps> = \r\n    (props : UsersSelecProps) => {\r\n    const { dispatch } = useContext(AppContext);\r\n    const onChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n        dispatch({\r\n            type: 'SELECT_USER',\r\n            payload: +event.target.value\r\n        });        \r\n    };\r\n\r\n    return (\r\n        <select id=\"UsersSelect\" onChange={onChange} value={props.selectedUserId}>\r\n            <option value={-1}>\r\n                {'Имя комментатора'}\r\n            </option>\r\n            {props.users.map(user => (\r\n                <option key={user.id} value={user.id}>\r\n                    {user.name}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n};\r\n\r\nexport default UsersSelect;","import React, {useContext} from 'react';\r\nimport AppContext from '../lib/app-context';\r\n\r\ninterface SearchProps {\r\n    search: string;\r\n}\r\n\r\nconst Search: React.FC<SearchProps> = \r\n    (props : SearchProps) => {\r\n    const { dispatch } = useContext(AppContext);\r\n    const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({\r\n            type: 'SET_SEARCH',\r\n            payload: event.target.value\r\n        });        \r\n    };\r\n\r\n    return (\r\n        <input\r\n            id=\"Search\"\r\n            onChange={onChange}\r\n            value={props.search}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Search;","import React, {useContext} from 'react';\r\nimport AppComment from '../interfaces/app-comment';\r\nimport AppContext from '../lib/app-context';\r\nimport './Comment.css';\r\n\r\ninterface CommentProps {\r\n    comment: AppComment;\r\n    search: string;\r\n}\r\n\r\nconst Comment: React.FC<CommentProps> = \r\n    (props : CommentProps) => {\r\n    const { dispatch } = useContext(AppContext);\r\n    const checked = props.comment.isSelected;\r\n    const parts = props.search.length > 0 ? \r\n        props.comment.text\r\n            .split(new RegExp(`(${props.search})`, 'gi'))\r\n            .filter(part => part.length > 0) : [props.comment.text];\r\n    const onCheck = () => {\r\n        dispatch({\r\n            type: 'CHECK_COMMENT',\r\n            payload: props.comment.id\r\n        });        \r\n    };\r\n    return (\r\n        <div className='CommentBlock'>\r\n            <div className='CommentTopBar'>\r\n                <div className='CommentTitle'>\r\n                    <div className='CommentUser'>\r\n                        {props.comment.userName}\r\n                    </div>\r\n                    <div className='CommentAdded'>\r\n                        {'added a comment -'}\r\n                    </div>\r\n                    <div className='CommentDate'>\r\n                        {props.comment.date.toLocaleString('ru-RU')}\r\n                    </div>\r\n                </div>\r\n                <input type='checkbox' checked={checked} onChange={onCheck}/>\r\n            </div>\r\n            \r\n            <div className='CommentText'>\r\n                {parts.map((part, i) => (\r\n                    <span key = {i} className={\r\n                        part.toLowerCase() === props.search.toLowerCase() ? \r\n                            'CommentHighlight' : undefined\r\n                        }\r\n                    >\r\n                        {part}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comment;","import React from 'react';\r\nimport AppComment from '../interfaces/app-comment';\r\nimport Comment from './Comment';\r\nimport './Comments.css';\r\n\r\ninterface CommentsProps {\r\n    comments: AppComment[];\r\n    selectedUserId: number;\r\n    search: string;\r\n}\r\n\r\nconst Comments: React.FC<CommentsProps> = \r\n    (props : CommentsProps) => {\r\n    const comments = props.comments\r\n        .filter(comment => props.selectedUserId === -1 ||\r\n            comment.userId === props.selectedUserId)\r\n        .filter(comment => props.search.length <= 0 ||\r\n            comment.text.toLowerCase().includes(\r\n                props.search.toLowerCase()\r\n        ));\r\n    \r\n    return (\r\n        <div>\r\n            <div className='CommentsTitle'>\r\n                {'Comments:'}\r\n            </div>\r\n            {comments.slice(0, -1).map(comment => (\r\n                <React.Fragment key={comment.id}>\r\n                    <Comment \r\n                        comment={comment}\r\n                        search={props.search}\r\n                    />\r\n                    <hr/>\r\n                </React.Fragment>\r\n            ))}\r\n            {comments.length > 1 && \r\n                <Comment \r\n                    comment={comments[comments.length - 1]}\r\n                    search={props.search}\r\n                />\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Comments;","import React, {useContext} from 'react';\r\nimport AppContext from '../lib/app-context';\r\nimport './DeleteButton.css';\r\n\r\ninterface DeleteButtonProps {\r\n    isEnabled: boolean;\r\n}\r\n\r\nconst DeleteButton: React.FC<DeleteButtonProps> = \r\n    (props : DeleteButtonProps) => {\r\n    const { dispatch } = useContext(AppContext);\r\n    const onClick = () => {\r\n        if (props.isEnabled) {\r\n            dispatch({\r\n                type: 'SET_STATUS',\r\n                payload: 'SYNC'\r\n            });        \r\n        }\r\n    };\r\n    return (\r\n        <div className={props.isEnabled ? 'DeleteButtonEnabled' : \r\n                'DeleteButtonDisabled'\r\n            }\r\n            onClick={onClick}\r\n        >\r\n            {'Delete'}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteButton;","import React, { useEffect, useReducer } from 'react';\nimport './App.css';\nimport * as api from '../lib/api';\nimport AppState from '../interfaces/app-state';\nimport AppContext from '../lib/app-context';\nimport { reducer } from '../lib/app-store';\nimport AppComment from '../interfaces/app-comment';\nimport UsersSelect from './UsersSelect';\nimport Search from './Search';\nimport Comments from './Comments';\nimport DeleteButton from './DeleteButton';\n\nconst initialState = {\n  users: [],\n  comments: [],\n  selectedUserId: -1,\n  search: '',\n  status: 'SYNC'\n} as AppState;\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    if (state.status === 'IDLE') return;\n    (async () => {\n      const selectedComments = state.comments.filter(\n        comment => comment.isSelected\n      );\n      if (selectedComments.length > 0) {\n        for (let comment of selectedComments) {\n          await api.deleteComment(comment.id);\n        }\n      }\n      const users = await api.getUsers();\n      dispatch({\n        type: 'SET_USERS',\n        payload: users\n      });\n      const apiComments = await api.getComments();\n      const appComments = apiComments.map(\n        apiComment => {\n          const appComment = {...apiComment} as AppComment;\n          const user = users.find(user => user.id === apiComment.userId);\n          appComment.userName = user ? user.name : '';\n          appComment.isSelected = false;\n          return appComment;\n        }\n      );\n      dispatch({\n        type: 'SET_STATUS',\n        payload: 'IDLE'\n      });\n      dispatch({\n        type: 'SET_COMMENTS',\n        payload: appComments\n      });\n    })();\n  }, [state.comments, state.status]);\n\n  const deleteEnabled = state.comments.some(comment => comment.isSelected);\n\n  return (\n    <AppContext.Provider value={({dispatch})}>\n      <div className=\"App\">\n        <div className=\"AppTopBar\">\n          <UsersSelect \n            users={state.users}\n            selectedUserId={state.selectedUserId}\n          />\n          <Search search = {state.search}/>\n        </div>\n        <Comments \n          comments={state.comments}\n          selectedUserId={state.selectedUserId}\n          search={state.search}\n        />\n        <div className=\"AppButtonsBar\">\n          <DeleteButton isEnabled={deleteEnabled}/>\n        </div>\n      </div>\n    </AppContext.Provider>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}